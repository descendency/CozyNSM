user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # Default server
    server {
        listen 80 default_server;
        listen 443 ssl default_server;

        server_name _;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        return 444;
    }

    # GoGS
    server {
        listen 80;

        server_name gogs.DOMAIN;

        return 301 https://gogs.DOMAIN/;
    }
    server {
        listen 443 ssl;

        server_name gogs.DOMAIN;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass https://GOGSIP:3000/;
        }
    }

    # RocketChat
    server {
        listen 80;

        server_name chat.DOMAIN;

        return 301 https://chat.DOMAIN/;
    }

    server {
        listen 443 ssl;

        server_name chat.DOMAIN;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://CHATIP:3000/;
        }
    }

    # Kibana
    server {
        listen 80;

        server_name kibana.DOMAIN;

        return 301 https://kibana.DOMAIN/;
    }

    server {
        listen 443 ssl;

        server_name kibana.DOMAIN;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://KIBANAIP:5601/;
        }
    }

    # Splunk
    server {
        listen 80;

        server_name splunk.DOMAIN;

        return 301 https://splunk.DOMAIN/;
    }

    server {
        listen 443 ssl;

        server_name splunk.DOMAIN;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://SPLUNKIP:8000/;
        }
    }

    # TheHive
    server {
        listen 80;

        server_name hive.DOMAIN;

        return 301 https://hive.DOMAIN/;
    }

    server {
        listen 443 ssl;


        server_name hive.DOMAIN;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_http_version 1.1; # this is essential for chunked responses to work

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://HIVEIP:9000/;
        }
    }

    # Cortex
    server {
        listen 80;

        server_name cortex.DOMAIN;

        return 301 https://cortex.DOMAIN/;
    }

    server {
        listen 443 ssl;

        server_name cortex.DOMAIN;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_http_version 1.1; # this is essential for chunked responses to work

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://CORTEXIP:9001/;
        }
    }
}
