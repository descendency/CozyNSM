filter {
    if "bro" in [tags] && [source] =~ /.*conn\.log/ {
        mutate {
            rename => [ "id.orig_h", "Source_IP" ]
            rename => [ "ts", "Timestamp" ]
            rename => [ "uid", "Connection_Id" ]
            rename => [ "id.orig_p", "Source_Port" ]
            rename => [ "orig_pkts", "Source_Packets" ]
            rename => [ "orig_ip_bytes", "Source_Bytes" ]
            rename => [ "id.resp_h", "Destination_IP" ]
            rename => [ "id.resp_p", "Destination_Port" ]
            rename => [ "resp_pkts", "Destination_Packets" ]
            rename => [ "resp_ip_bytes", "Destination_Bytes" ]
            rename => [ "proto", "Network_Protocol" ]
            rename => [ "missed_bytes", "Network_Bytes_Missed" ]
        }

        if [Network_Protocol] == "tcp" && [history] {
            mutate {
                rename => [ "history", "TCP_Flags" ]
            }
        } else {
            mutate {
                remove_field => [ "history" ]
            }
        }

        if [Network_Protocol] == "icmp" {
            mutate {
                rename => [ "Source_Port", "ICMP_Type" ]
                rename => [ "Destination_Port", "ICMP_Code" ]
            }
        }

        mutate {
            convert => [ "duration", "float" ]
            convert => [ "Source_Port", "integer" ]
            convert => [ "Destination_Port", "integer" ]
            convert => [ "Source_Bytes", "integer" ]
            convert => [ "Destination_Bytes", "integer" ]
            convert => [ "Network_Bytes_Missed", "integer" ]
            convert => [ "Source_Packets", "integer" ]
            convert => [ "Source_Bytes", "integer" ]
            convert => [ "Destination_Packets", "integer" ]
            convert => [ "Destination_Bytes", "integer" ]
        }

        if ![duration] {
            add_field => { "duration" => 0.0 }
        }

        translate {
            dictionary_path => "/usr/share/logstash/config/bro_conn_dictionary.yaml"
            field => "connection_state"
            destination => "connection_state_description"
        }

        mutate {
            remove_field => [ "conn_state", "offset", "service", "orig_bytes", "resp_bytes", "tunnel_parents", "vlan", "orig_l2_addr", "resp_l2_addr", "beat.hostname", "beat.name", "beat.version", "host.name" ]
        }

        geoip {
            source => "DestinationIP"
            target => "geoip"
            database => "/usr/share/logstash/GeoIP/GeoLite2-City.mmdb"
            add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
        }

        geoip {
            source => "SourceIP"
            target => "geoip"
            database => "/usr/share/logstash/GeoIP/GeoLite2-City.mmdb"
            add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
        }

        mutate {
            convert => [ "[geoip][coordinates]", "float"]
            add_field => { "CozyStack_Event_Type" => "Network_Connection" }
            add_tag => "output"
        }
    }
}
