filter {
  if [bro_host] {
    mutate {
      replace => [ "host", "%{bro_host}" ]
    }
  }

  if [source] =~ /.*conn\.log/ {
    mutate {
        remove_field => [ "local_orig", "local_resp", "orig_ip_bytes", "resp_ip_bytes", "tunnel_parents" ]
    }
  }

  if [source] =~ /.*files\.log/ {
    mutate {
        remove_field => [ "analyzers", "filename", "local_orig", "is_orig", "parent_fuid" ]
        rename => [ "conn_uids", "uid" ]
    }
  }

  if [source] =~ /.*software\.log/ {
    drop { }
  }

  if [source] =~ /.*stats\.log/ {
    drop { }
  }

  if "bro" in [tags] {
    mutate {
      convert => [ "id.orig_p", "integer" ]
      convert => [ "id.resp_p", "integer" ]
      convert => [ "orig_bytes", "integer" ]
      convert => [ "resp_bytes", "integer" ]
      convert => [ "missed_bytes", "integer" ]
      convert => [ "orig_pkts", "integer" ]
      convert => [ "orig_ip_bytes", "integer" ]
      convert => [ "resp_pkts", "integer" ]
      convert => [ "resp_ip_bytes", "integer" ]
      rename => [ "id.orig_h", "SourceIP" ]
      rename => [ "id.resp_h", "DestinationIP" ]
      rename => [ "id.orig_p", "SourcePort" ]
      rename => [ "id.resp_p", "DestinationPort" ]
      rename => [ "tx_hosts", "SourceIP" ]
      rename => [ "rx_hosts", "DestinationIP" ]
    }
    if [conn_state] and [conn_state] == "S0" {
      mutate { add_field => { "[conn_state_description]" => "Connection attempt seen, no reply" } }
    }

    if [conn_state] and [conn_state] == "S1" {
      mutate { add_field => { "[conn_state_description]" => "Connection established, not terminated (0 byte counts)" } }
    }

    if [conn_state] and [conn_state] == "SF" {
      mutate {add_field => { "[conn_state_description]" => "Normal establish & termination (>0 byte counts)" } }
    }

    if [conn_state] and [conn_state] == "REJ" {
      mutate { add_field => { "[conn_state_description]" => "Connection attempt rejected" } }
    }

    if [conn_state] and [conn_state] == "S2" {
      mutate { add_field => { "[conn_state_description]" => "Established, ORIG attempts close, no reply from RESP." } }
    }

    if [conn_state] and [conn_state] == "S3" {
      mutate { add_field => { "[conn_state_description]" => "Established, RESP attempts close, no reply from ORIG." } }
    }

    if [conn_state] and [conn_state] == "RSTO" {
      mutate { add_field => { "[conn_state_description]" => "Established, ORIG aborted (RST)" } }
    }

    if [conn_state] and [conn_state] == "RSTR" {
      mutate { add_field => { "[conn_state_description]" => "Established, RESP aborted (RST)" } }
    }

    if [conn_state] and [conn_state] == "RSTROS0" {
      mutate { add_field => { "[conn_state_description]" => "ORIG sent SYN then RST; no RESP SYN-ACK" } }
    }

    if [conn_state] and [conn_state] == "RSTRH" {
      mutate { add_field => { "[conn_state_description]" => "RESP sent SYN-ACK then RST; no ORIG SYN" } }
    }

    if [conn_state] and [conn_state] == "SH" {
      mutate { add_field => { "conn_state_description" => "ORIG sent SYN then FIN; no RESP SYN-ACK (“half-open”)" } }
    }

    if [conn_state] and [conn_state] == "SHR" {
      mutate { add_field => { "[conn_state_description]" => "RESP sent SYN-ACK then FIN; no ORIG SYN" } }
    }

    if [conn_state] and [conn_state] == "OTH" {
      mutate { add_field => { "[conn_state_description]" => "No SYN, not closed. Midstream traffic. Partial connection." } }
    }

    mutate { add_tag => "processed" }
  }
}
